{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gurwan/Documents/Techno/Projet/knowyourworld/src/Stopwatch.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Stopwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      on: false,\n      start: 0,\n      time: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        on: true,\n        time: this.state.time,\n        start: Date.now() - this.state.time\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          time: Date.now() - this.state.start\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        on: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        start: 0,\n        time: 0\n      });\n    };\n  }\n\n  render() {\n    const {\n      timerTime\n    } = this.state.time;\n    let s = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n    let m = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let h = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stopwatch-display\",\n        children: [hours, \" : \", minutes, \" : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/gurwan/Documents/Techno/Projet/knowyourworld/src/Stopwatch.js"],"names":["React","Component","Stopwatch","state","on","start","time","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","render","timerTime","s","Math","floor","slice","m","h","hours","minutes","seconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BE,KAF8B,GAEtB;AACJC,MAAAA,EAAE,EAAE,KADA;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,IAAI,EAAE;AAHF,KAFsB;;AAAA,SAQ9BC,UAR8B,GAQjB,MAAM;AACf,WAAKC,QAAL,CAAc;AAACJ,QAAAA,EAAE,EAAC,IAAJ;AAASE,QAAAA,IAAI,EAAC,KAAKH,KAAL,CAAWG,IAAzB;AAA8BD,QAAAA,KAAK,EAACI,IAAI,CAACC,GAAL,KAAW,KAAKP,KAAL,CAAWG;AAA1D,OAAd;AACA,WAAKK,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC3B,aAAKJ,QAAL,CAAc;AAACF,UAAAA,IAAI,EAACG,IAAI,CAACC,GAAL,KAAW,KAAKP,KAAL,CAAWE;AAA5B,SAAd;AACH,OAFuB,EAEtB,EAFsB,CAAxB;AAGH,KAb6B;;AAAA,SAe9BQ,SAf8B,GAelB,MAAM;AACd,WAAKL,QAAL,CAAc;AAAEJ,QAAAA,EAAE,EAAE;AAAN,OAAd;AACAU,MAAAA,aAAa,CAAC,KAAKH,KAAN,CAAb;AACH,KAlB6B;;AAAA,SAoB9BI,UApB8B,GAoBjB,MAAM;AACf,WAAKP,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CADK;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAd;AAIH,KAzB6B;AAAA;;AA4B9BU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKd,KAAL,CAAWG,IAAjC;AACA,QAAIY,CAAC,GAAG,CAAC,MAAOC,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAG,IAAvB,IAA+B,EAAvC,EAA4CI,KAA5C,CAAkD,CAAC,CAAnD,CAAR;AACA,QAAIC,CAAC,GAAG,CAAC,MAAOH,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAG,KAAvB,IAAgC,EAAxC,EAA6CI,KAA7C,CAAmD,CAAC,CAApD,CAAR;AACA,QAAIE,CAAC,GAAG,CAAC,MAAMJ,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAG,OAAvB,CAAP,EAAwCI,KAAxC,CAA8C,CAAC,CAA/C,CAAR;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBACKG,KADL,SACeC,OADf,SAC2BC,OAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAxC6B;;AA2ClC,eAAexB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\"\n\nclass Stopwatch extends Component {\n\n    state = {\n        on: false,\n        start: 0,\n        time: 0\n    }\n    \n    startTimer = () => {\n        this.setState({on:true,time:this.state.time,start:Date.now()-this.state.time});\n        this.timer = setInterval(() => {\n            this.setState({time:Date.now()-this.state.start})\n        },10);\n    }\n    \n    stopTimer = () => {\n        this.setState({ on: false });\n        clearInterval(this.timer);\n    };\n    \n    resetTimer = () => {\n        this.setState({\n          start: 0,\n          time: 0\n        });\n    };\n\n    \n    render(){\n        const { timerTime } = this.state.time;\n        let s = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n        let m = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n        let h = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n        return (\n            <div className=\"stopwatch\">\n                <div className=\"Stopwatch-display\">\n                    {hours} : {minutes} : {seconds}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Stopwatch;"]},"metadata":{},"sourceType":"module"}