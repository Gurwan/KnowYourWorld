{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gurwan/Documents/Techno/Projet/knowyourworld/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.input = /*#__PURE__*/React.createRef();\n    this.state = {\n      paysFound: [],\n      paysAfrique: [\"Afrique du Sud\", \"Algérie\", \"Angola\", \"Bénin\", \"Botswana\", \"Burkina Faso\", \"Burundi\", \"Cameroun\", \"Cap-Vert\", \"République centrafricaine\", \"Comores\", \"République du Congo\", \"République démocratique du Congo\", \"Côte d'Ivoire\", \"Djibouti\", \"Égypte\"],\n      paysAmerique: [],\n      paysAsie: [],\n      paysEuropeen: [\"France\", \"Espagne\"],\n      paysOceanie: [],\n      newPays: '',\n      compteurAfrique: 0,\n      compteurAmerique: 0,\n      compteurAsie: 0,\n      compteurEurope: 0,\n      compteurOceanie: 0\n    };\n\n    this.hChange = event => {\n      const v = event.currentTarget.value;\n      this.setState({\n        newPays: v.charAt(0).toUpperCase() + v.slice(1)\n      });\n    };\n\n    this.addCountry = event => {\n      event.preventDefault();\n      var countries = this.state.paysFound.slice();\n      var cE = this.state.compteurEurope;\n\n      if (this.state.paysEuropeen.includes(this.state.newPays) && !this.state.paysFound.includes(this.state.newPays)) {\n        countries.push(this.state.newPays);\n        this.setState({\n          compteurEurope: cE + 1\n        });\n      }\n\n      this.setState({\n        paysFound: countries\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Countries Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addCountry,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.newPays,\n          onChange: this.hChange,\n          type: \"text\",\n          placeholder: \"Entrer un pays\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Confirmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pays en Afrique : \", this.state.compteurAfrique, \"/\", this.state.paysAfrique.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pays en Am\\xE9rique : \", this.state.compteurAmerique, \"/\", this.state.paysAmerique.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pays en Asie : \", this.state.compteurAsie, \"/\", this.state.paysAsie.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pays en Europe : \", this.state.compteurEurope, \"/\", this.state.paysEuropeen.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pays en Oc\\xE9anie : \", this.state.compteurOceanie, \"/\", this.state.paysOceanie.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.paysFound.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: m\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["/home/gurwan/Documents/Techno/Projet/knowyourworld/src/index.js"],"names":["React","ReactDOM","App","Component","input","createRef","state","paysFound","paysAfrique","paysAmerique","paysAsie","paysEuropeen","paysOceanie","newPays","compteurAfrique","compteurAmerique","compteurAsie","compteurEurope","compteurOceanie","hChange","event","v","currentTarget","value","setState","charAt","toUpperCase","slice","addCountry","preventDefault","countries","cE","includes","push","render","length","map","m","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n\n  input = React.createRef();\n\n  state = {\n    paysFound : [],\n    paysAfrique : [\"Afrique du Sud\",\"Algérie\",\"Angola\",\"Bénin\",\"Botswana\",\"Burkina Faso\",\"Burundi\",\"Cameroun\",\"Cap-Vert\",\"République centrafricaine\",\"Comores\",\"République du Congo\",\"République démocratique du Congo\",\"Côte d'Ivoire\",\"Djibouti\",\"Égypte\"],\n    paysAmerique : [],\n    paysAsie : [],\n    paysEuropeen: [\"France\",\"Espagne\"],\n    paysOceanie : [],\n    newPays: '',\n    compteurAfrique: 0,\n    compteurAmerique: 0,\n    compteurAsie: 0,\n    compteurEurope: 0,\n    compteurOceanie: 0\n  }\n\n  hChange = (event) => {\n    const v = event.currentTarget.value;\n    this.setState({newPays: v.charAt(0).toUpperCase()+v.slice(1)});\n  }\n\n  addCountry = (event) => {\n    event.preventDefault();\n    var countries = this.state.paysFound.slice();\n    var cE = this.state.compteurEurope;\n\n    if(this.state.paysEuropeen.includes(this.state.newPays) && !(this.state.paysFound.includes(this.state.newPays))){\n      countries.push(this.state.newPays);\n      this.setState({compteurEurope : cE+1});\n    } \n    this.setState({paysFound : countries});\n  }\n\n  render(){\n\n    return(\n      <div>\n        <h1>Countries Game</h1>\n        <form onSubmit={this.addCountry}>\n          <input value={this.state.newPays} onChange={this.hChange} type=\"text\" placeholder=\"Entrer un pays\"/>\n          <button>Confirmer</button>\n        </form>\n        <p>Pays en Afrique : {this.state.compteurAfrique}/{this.state.paysAfrique.length}</p>\n        <p>Pays en Amérique : {this.state.compteurAmerique}/{this.state.paysAmerique.length}</p>\n        <p>Pays en Asie : {this.state.compteurAsie}/{this.state.paysAsie.length}</p>\n        <p>Pays en Europe : {this.state.compteurEurope}/{this.state.paysEuropeen.length}</p>\n        <p>Pays en Océanie : {this.state.compteurOceanie}/{this.state.paysOceanie.length}</p>\n        <ul>{this.state.paysFound.map(m => (<li>{m}</li>))}</ul>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement);\n"]},"metadata":{},"sourceType":"module"}